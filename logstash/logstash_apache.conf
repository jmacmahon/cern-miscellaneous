input {
#    file {
#        start_position => "end"
#        path => "/opt/log/apache/cds/apache-ssl.log"
##        path => "/home/joe/elasticsearch/logstash/logs/test-ssl.log"
#        tags => [ "_apachelog", "_ssl" ]
#    }
#    file {
#        start_position => "end"
#        path => "/opt/log/apache/cds/apache.log"
##        path => "/home/joe/elasticsearch/logstash/logs/test.log"
#        tags => [ "_apachelog" ]
#    }
#    file {
#        start_position => "end"
#        path => "/opt/log/apache/cdsweb/apache.log"
##        path => "/home/joe/elasticsearch/logstash/logs/test-cdsweb.log"
#        tags => [ "_apachelog", "_cdsweb" ]
#    }
    stdin { tags => [ "_apachelog" ] }
}

filter {
    if "_ssl" in [tags] {
        mutate {
            replace => { "ssl" => true }
        }
    }
    if "_cdsweb" in [tags] {
        mutate {
            replace => { "cdsweb" => true }
        }
    }
    if "_apachelog" in [tags] {
        # Tag bot requests.  Googlebot and bingbot account for >99% of all bot
        # traffic; a list of other bots: 'Arachnoidea', 'FAST-WebCrawler',
        # 'Fluffy the spider', 'Gigabot', 'Gulper', 'ia_archiver',
        # 'MantraAgent', 'Scooter', 'Scrubby', 'Slurp', 'Teoma_agent1',
        # 'Winona', 'ZyBorg', 'Almaden', 'Cyveillance', 'DTSearch',
        # 'Girafa.com', 'Indy Library', 'LinkWalker', 'MarkWatch',
        # 'NameProtect', 'Robozilla', 'Teradex Mapper', 'Tracerlock',
        # 'W3C_Validator', 'WDG_Validator', 'Zealbot'

        if "Googlebot" in [message] or "bingbot" in [message] or "MSN" in [message] {
            mutate { replace => { "bot" => true } }
        }

        if "GET /piwik/" in [message] {
            drop { }
        }

        grok {
            match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:timetaken}" }
        }

        mutate {
            gsub => [
                "referrer", "^\"(.*)\"$", "\1",
                #"referrer", "[(^\")(\"$)]", "",
                "agent", "^\"(.*)\"$", "\1"
            ]
        }

        if ![verb] {
            drop { }
        }

        date {
            match => [ "timestamp", "dd/MMM/YYY:HH:mm:ss Z" ]
        }

        geoip {
            source => "clientip"
        }

        # Get our types right
        mutate {
            replace => { "type" => "apachelog" }
            convert => {
                "timetaken" => "integer"
                "bytes" => "integer"
            }
        }

        mutate {
            add_field => { "balancer" => "%{host}" }
        }

        # Whitelisting various fields so we don't fill ES up with duplicate data
        prune {
            whitelist_names => [
                "@timestamp",
                "clientip",
                "verb",
                "request",
                "response",
                "bytes",
                "referrer",
                "agent",
                "timetaken",
                "geoip",
                "type",
                "ssl",
                "cdsweb",
                "_ttl",
                "balancer"
            ]
        }

        # Prune doesn't work with nested fields.
        mutate {
            remove_field => [
                "[geoip][ip]",
                "[geoip][country_code3]",
                "[geoip][country_name]",
                "[geoip][postal_code]",
                "[geoip][dma_code]",
                "[geoip][area_code]",
                "[geoip][real_region_name]",
                "[geoip][latitude]",
                "[geoip][longitude]",
                "[geoip][city_name]",
                "[geoip][continent_code]",
                "[geoip][location]",
                "[geoip][region_name]",
                "[geoip][timezone]"
            ]
        }
    }
}

output {
    stdout {
        codec => rubydebug
    }

#    redis {
#        host => "cds-csp-test.cern.ch"
#        data_type => "list"
#        key => "cdslog"
#        password => "8g347gf8457g548"
#    }

#    elasticsearch {
##        host => "cds-test-statistics-01.cern.ch"
##        port => 9200
##        index => "test-apachelogs-%{+YYYY.MM}"
#
#        host => "localhost"
#        port => 9198
#        index => "local-test-apachelogs-%{+YYYY.MM}"
#        
#        protocol => "http"
#        # manage_template is not strictly necessary if we're providing our own
#        # templates, but best to be explicit.
#        manage_template => false
#    }
}
